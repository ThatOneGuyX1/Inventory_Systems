Please respond thoroughly (at least two sentences for each question) to
the following three questions.

1. Describe an experience you had this semester where you saw the power of
functions.

Seeing how a function with proper parameters could be set up to be called and recalled to fill differnt needs really helped me see the power.
For example, being able to call a function that appends certain data to a list, removes information, or creates some output can save a programmer 
much time and space in his program. The other nice thing is for memory and speed. By using funcition that only need variable for itself 
a function can have its own variables that after the function is complete are delelted allowing the program to run faster.

2. In your judgment, what is the value of test functions?

I belive the test function is very powerful, however it is important to have a deeper understanding of how it works and how one must write code 
that is testable. I leared my lesson by not keeping that in mind during my final project. I poorly designed my function so that they were not 
easliy testable. The other nice thing about test function is it allows a programmer see where a mistake occurs so that they can quickly fix it.

3. Describe your process for troubleshooting and fixing a program that
has a problem. What is one thing you can do to improve your process?

    When ever I get an error, I follow the prompt after the error and trace the error to its source often finding mistakes there. When a mistake
    is not clear I will add a break point at the start of the function, or a loop in some cases, I will then run the program line by line, watching
    the variables and their values or what ever is needed. Usually at this point the error or mistake is evident and I can quickly fix it. 
    I also troubleshoot and step trough each function before I declare it finished, this is to insure that it will be safe and secure. Sometimes
    this process is not helpful and I need to test each step of the loop and function in blocks seeing where a mistake is created. This is done
    by commenting out blocks of code and using the debugging window.

    One thing I feel that could improve my process is having a deep understanding of the error messages. I could possibly study them out after I
    solve a bug and add it to a list, creating a list of psudeocode that I can refer to solve similar issues. This could also be commented into
    the program itself allowing for a quicker reference.

